apiVersion: apps/v1
kind: Deployment
metadata: { name: flask-api, namespace: {{ .Values.namespace }} }
spec:
  replicas: 2
  selector: { matchLabels: { app: flask-api } }
  template:
    metadata:
      labels:
        app: flask-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "5000"
    spec:
      imagePullSecrets:
        - name: ecr-secret
      containers:
        - name: api
          image: "{{ .Values.flask.image.repository }}:{{ .Values.flask.image.tag }}"
          imagePullPolicy: "{{ .Values.flask.image.pullPolicy }}"
          env:
            - name: DATABASE_URL
              value: http://surrealdb:8000
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: surreal-secret, key: user } }
            - name: DB_PASS
              valueFrom: { secretKeyRef: { name: surreal-secret, key: pass } }
          ports: [ { containerPort: 5000 } ]
---
apiVersion: v1
kind: Service
metadata: { name: flask-api, namespace: {{ .Values.namespace }} }
spec:
  selector: { app: flask-api }
  ports: [ { port: 80, targetPort: 5000 } ]
